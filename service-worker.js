
/* eslint-disable no-restricted-globals */
import { precacheAndRoute } from 'workbox-precaching';
import { registerRoute } from 'workbox-routing';
import { CacheFirst, NetworkFirst } from 'workbox-strategies';
import { ExpirationPlugin } from 'workbox-expiration';


const appVersion = "v1.0.0"; // update this when your app version changes

// Precache assets generated by the build process.
// If you're using a build tool that injects a manifest into self.__WB_MANIFEST,
// then the following line will precache all those assets.

precacheAndRoute(self.__WB_MANIFEST || [
  // Alternatively, list the assets manually:
  { url: '/', revision: appVersion },
  { url: '/index.html', revision: appVersion },
  { url: '/stockfish.js', revision: appVersion }
]);

// Cache JavaScript files using a CacheFirst strategy with expiration.
registerRoute(
  ({ request }) => request.destination === 'script',
  new CacheFirst({
    cacheName: 'js-cache',
    plugins: [
      new ExpirationPlugin({
        maxAgeSeconds: 30 * 24 * 60 * 60, // Cache JS files for 30 days.
      }),
    ],
  })
);

// Cache CSS files using a CacheFirst strategy with expiration.
registerRoute(
  ({ request }) => request.destination === 'style',
  new CacheFirst({
    cacheName: 'css-cache',
    plugins: [
      new ExpirationPlugin({
        maxAgeSeconds: 30 * 24 * 60 * 60, // 30 days.
      }),
    ],
  })
);

// Cache images using a CacheFirst strategy with expiration.
registerRoute(
  ({ request }) => request.destination === 'image',
  new CacheFirst({
    cacheName: 'images-cache',
    plugins: [
      new ExpirationPlugin({
        maxEntries: 60,
        maxAgeSeconds: 30 * 24 * 60 * 60, // 30 days.
      }),
    ],
  })
);

// Optionally, use a NetworkFirst strategy for HTML pages so that updates are fetched.
registerRoute(
  ({ request }) => request.mode === 'navigate',
  new NetworkFirst({
    cacheName: 'html-cache',
    plugins: [
      new ExpirationPlugin({
        maxAgeSeconds: 30 * 24 * 60 * 60, // 30 days.
        // maxAgeSeconds: 24 * 60 * 60, // 1 day.
      }),
    ],
  })
);
